[metadata]
name = frarch
version = file: frarch/_version.txt
description = Training Framework for PyTorch projects
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/victorbadenas/frarch
author = vbadenas
author_email = victor.badenas@gmail.com
license = Apache 2.0
license_file = LICENSE
classifiers =
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python",
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Topic :: Software Development :: Libraries :: Python Modules
keywords = deep-learning,framework,pytorch
platform = any
project_urls =
    Bug Tracker = https://github.com/victorbadenas/frarch/issues
    Changelog = https://github.com/victorbadenas/frarch/blob/master/CHANGELOG.rst

[options]
packages = find:
install_requires =
    hyperpyyaml==1.0.1
    numpy==1.22.4
    torch==1.11.0
    torchaudio==0.11.0
    torchvision==0.12.0
    tqdm==4.64.0
python_requires = >=3.8
include_package_data = true
setup_requires =
    setuptools>=46.4.0
test_suite = tests
zip_safe = false

[options.packages.find]
exclude =
    tests*
    scripts*
    experiments*

[options.extras_require]
dev =
    black==22.3.0
    frarch[docs]
    frarch[test]
    identify>=1.4.20
    pre-commit
docs =
    readthedocs-sphinx-search
    sphinx
    sphinx-autobuild
    sphinx-book-theme
    watchdog<1.0.0
test =
    coverage

[options.package_data]
frarch = _version.txt

[coverage:run]
branch = True
omit = */tests/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self\.debug:
    if debug:
    if DEBUG:
    raise AssertionError
    raise NotImplementedError
    if 0:
    if False:
    if __name__ == .__main__.:
