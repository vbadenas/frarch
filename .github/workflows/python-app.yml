# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: frarch CI

on:
  push:
    branches:
      - master
      - development
      - feature/*
      - fix/*
  pull_request:
    branches:
      - master
      - development
      - feature/*
      - fix/*

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: [3.7, 3.8, 3.9]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: setup package
      run: |
        python -m pip install --upgrade pip
        python setup.py install

  unittest:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: [3.7, 3.8, 3.9]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: install
      run: |
        python -m pip install --upgrade pip
        pip install coverage
        python setup.py install
    - name: test
      run: |
        coverage run -m unittest discover
        coverage report -m --omit='tests/*'

    - if: ${{ matrix.python == '3.9'}} && ${{ matrix.os == 'ubuntu-latest'}}
      name: Get Coverage for badge
      run: |
        apt-get install jq
        coverage json
        COVERAGE=$(LC_NUMERIC="en_US.UTF-8" printf "%.2f%%" $(cat coverage.json | jq .totals.percent_covered))
        echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
        REF=${{ github.ref }}
        echo "github.ref: $REF"
        IFS='/' read -ra PATHS <<< "$REF"
        BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
        echo $BRANCH_NAME
        echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV

    # - if: ${{ matrix.node-version == '14.x' }}
    #   name: Create the Badge
    #   uses: schneegans/dynamic-badges-action@v1.0.0
    #   with:
    #     auth: ${{ secrets.GIST_SECRET }}
    #     gistID: 7d4c25ef2e97e8de523ef7c1fee26e8e
    #     filename: your-repo-name__${{ env.BRANCH }}.json
    #     label: Test Coverage
    #     message: ${{ env.COVERAGE }}
    #     color: green
    #     namedLogo: jest
